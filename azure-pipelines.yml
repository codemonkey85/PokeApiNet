trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- checkout: self
  displayName: Checkout
  fetchDepth: 0
- task: UseDotNet@2
  displayName: 'Setup dotnet SDK'
  inputs:
    packageType: sdk
    version: '8.x'
- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    arguments: '--configuration $(BuildConfiguration) --filter "Category = Unit" /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
    projects: '**/*.Tests.csproj'
- task: PublishTestResults@2
  displayName: 'Publish test result'
  inputs:
    testResultsFormat: 'XUnit'
    testResultsFiles: '**/coverage.cobertura.xml'
    failTaskOnFailedTests: true
- task: gitversion-setup@4
  inputs:
    versionSpec: '6.x'
    preferLatestVersion: true
- task: gitversion-execute@4
  inputs:
    configFilePath: './GitVersion.yml'
    updateAssemblyInfo: true
    updateProjectFiles: true
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    packagesToPack: '**/PokeApiNet.csproj'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'GitVersion.SemVer'
    configuration: $(buildConfiguration)
- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'